<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>栈和队列的转换</title>
    <url>/2019/12/17/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="用栈实现队列-amp-用队列实现栈问题"><a href="#用栈实现队列-amp-用队列实现栈问题" class="headerlink" title="用栈实现队列&amp;用队列实现栈问题"></a>用栈实现队列&amp;用队列实现栈问题</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>栈和队列是两种常见的数据结构，简单概括就是栈是“先入后出”的读写规则，队列则遵循“先入先出”的顺序，在理解这些的基础上对于如何使用A实现B的问题就很容易实现了。</p>
<a id="more"></a>

<h2 id="一-栈实现队列"><a href="#一-栈实现队列" class="headerlink" title="一.栈实现队列"></a>一.栈实现队列</h2><h3 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1.思路分析"></a>1.思路分析</h3><p>首先，队列的基本操作有入队操作<code>add</code>、出队操作<code>pool</code>和取队首操作<code>peek</code>，而按照队列的“先入先出”的规律，我们可以新建一个数据栈data和一个辅助栈help来实现这些操作，<code>add</code>时将数据压入data栈即可，例如依次<code>add</code>1、2、3、4、5，这时data栈存储情况如下图<img src="/images/stacktoqueue1.png" alt="stacktoqueue1"></p>
<p>假如此时执行<code>pool</code>操作，按栈的读取规则得到的是最后入栈、处于栈顶的5，显然是不正确的(应当是最先输入的1)，那么如何得到正确的读取序列呢？其实很简单，还记得刚刚提过的辅助栈吗，我们将data栈内的数据依次弹出直到data栈弹空<img src="/images/stacktoqueue2.png" alt="stacktoqueue2"></p>
<p>这时我们发现，只要对help栈执行出栈操作，即可按正确的顺序输出了。</p>
<h3 id="2-完整代码"><a href="#2-完整代码" class="headerlink" title="2.完整代码"></a>2.完整代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StackToQueue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Stack&lt;Integer&gt; data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Stack&lt;Integer&gt; help;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StackToQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        data = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        help = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> newNum)</span></span>&#123;</span><br><span class="line">        data.push(newNum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">peek</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(help.empty())&#123;</span><br><span class="line">            <span class="keyword">while</span>(!data.empty())&#123;</span><br><span class="line">                <span class="keyword">int</span> t = data.pop();</span><br><span class="line">                help.push(t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> help.peek();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">poll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(help.empty())&#123;</span><br><span class="line">            <span class="keyword">while</span>(!data.empty())&#123;</span><br><span class="line">                <span class="keyword">int</span> t = data.pop();</span><br><span class="line">                help.push(t);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> help.pop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        StackToQueue queue = <span class="keyword">new</span> StackToQueue();</span><br><span class="line">        queue.add(<span class="number">1</span>);</span><br><span class="line">        queue.add(<span class="number">2</span>);</span><br><span class="line">        queue.add(<span class="number">3</span>);</span><br><span class="line">        System.out.println(queue.poll());</span><br><span class="line">        queue.add(<span class="number">4</span>);</span><br><span class="line">        queue.add(<span class="number">5</span>);</span><br><span class="line">        System.out.println(queue.peek());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="二-队列实现栈"><a href="#二-队列实现栈" class="headerlink" title="二.队列实现栈"></a>二.队列实现栈</h2><h3 id="1-思路分析-1"><a href="#1-思路分析-1" class="headerlink" title="1.思路分析"></a>1.思路分析</h3><h3 id="2-完整代码-1"><a href="#2-完整代码-1" class="headerlink" title="2.完整代码"></a>2.完整代码</h3><h2 id="三-关联问题–栈的getMin-操作"><a href="#三-关联问题–栈的getMin-操作" class="headerlink" title="三.关联问题–栈的getMin()操作"></a>三.关联问题–栈的getMin()操作</h2><h3 id="1-思路分析-2"><a href="#1-思路分析-2" class="headerlink" title="1.思路分析"></a>1.思路分析</h3><h3 id="2-完整代码-2"><a href="#2-完整代码-2" class="headerlink" title="2.完整代码"></a>2.完整代码</h3>]]></content>
  </entry>
  <entry>
    <title>frist blog</title>
    <url>/2019/12/16/frist-blog/</url>
    <content><![CDATA[<h2 id="我的第一篇博客"><a href="#我的第一篇博客" class="headerlink" title="我的第一篇博客"></a>我的第一篇博客</h2><p>这里是我的技术博客，会记录一些学习过程中的体会和总结<br><a href="https://github.com/qingshui3000" target="_blank" rel="noopener">我的<code>github</code></a></p>
]]></content>
  </entry>
</search>
